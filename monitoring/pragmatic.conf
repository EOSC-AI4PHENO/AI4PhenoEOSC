#server {
#    listen       80;
#    server_name  app.agriconetwork.com;
#    rewrite      ^ https://$server_name$request_uri? permanent;
#}


server {
        listen 80;
	#listen       443 ssl;
        server_name pragmatic.seth.software;
        root /home/app/www/;

        #index index.html index.htm;
        access_log /var/log/nginx/www.access.log;
        error_log /var/log/nginx/www.error.log;


        #ssl_certificate      /etc/nginx/ssl/app.agriconetwork.com/cert.pem;
        #ssl_certificate_key  /etc/nginx/ssl/app.agriconetwork.com/cert.key;
        #ssl_protocols        TLSv1.2;
        #ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        #ssl_prefer_server_ciphers on;
        #ssl_ecdh_curve secp384r1;

        #ssl_session_cache shared:SSL:10m;
        #ssl_session_timeout 10m;
        charset utf-8;
        log_not_found on;
        proxy_read_timeout 1d;

        #location / {
        #if (!-e $request_filename){
        #rewrite ^(.*)$ /index.html break;
        #}
        #}

        location / {
        try_files $uri /index.html;
        }


        location /api {
                #access_log /var/log/nginx/server.api.access.log;
                #error_log /var/log/nginx/server.api.error.log;

                add_header Cache-Control public;
                add_header Cache-Control no-store;
                add_header Cache-Control no-cache;

                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Port $server_port;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $host;

                proxy_pass http://localhost:5100;
        }

        location /ws/ {
                proxy_pass http://localhost:5100;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
        }

        location /ws/websocket/ {
                proxy_pass http://localhost:5100/ws/websocket;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "Upgrade";
                proxy_set_header Host $host;
        }

	location /aiapi/ {
		proxy_pass http://localhost:8080;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "Upgrade";
		proxy_set_header Host $host;
	}
}
